apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

version = versions.sdkVersionName + versionSuffix()
group = pub.groupId

task androidSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact androidSourcesJar
            artifact("$buildDir/outputs/aar/roktwebviewsdk-release.aar")
            groupId this.group
            artifactId pub.artifactId
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

// Bintray
bintray {
    user = System.env.BINTRAY_USER
    key = System.env.BINTRAY_KEY
    publications = ['Production']
    configurations = ['archives']
    publish = true
    pkg {
        repo =  pub.bintrayRepo
        name = pub.bintrayName
        desc = pub.libraryDescription
        websiteUrl = pub.siteUrl
        vcsUrl = pub.gitUrl
        licenses = pub.allLicenses
        version {
            desc = pub.libraryDescription
        }
    }
}

def versionSuffix() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    def defaultSuffix=''
    if(!branch.startsWith('release')) {
        defaultSuffix='-alpha' + (System.getenv("BUILDKITE_BUILD_NUMBER") ?: "11").toInteger()
    }
    defaultSuffix
}